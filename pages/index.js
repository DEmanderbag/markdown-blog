import Head from "next/head";
import fs from "fs";
import path from "path";
import matter from "gray-matter";
import styles from "../styles/Home.module.scss";
import useTranslation from "next-translate/useTranslation";
import Post from "../components/Post";

const postsDirectory = path.join(process.cwd(), "./posts");
const { defaultLocale } = require("../i18n.json");

export default function Home({ posts }) {
  let { t } = useTranslation("common");

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.intro}>
          <h1 className={styles.title}>{t("greeting")}</h1>
          <p>{t("target")}</p>
        </div>
        <Post post={posts} />
      </main>
    </>
  );
}

export const sortByDate = (a, b) => {
  return new Date(b.date) - new Date(a.date);
};

export async function getStaticProps({ locale }) {
  // Get folders from posts directory
  const postIds = fs.readdirSync(postsDirectory);

  // Get slug and frontmatter from posts
  const posts = postIds
    .map((id) => {
      const filename =
        locale === defaultLocale ? "index.md" : `index.${locale}.md`;
      const fullPath = path.join(postsDirectory, id, filename);

      if (!fs.existsSync(fullPath)) {
        return;
      }

      const fileContents = fs.readFileSync(fullPath, "utf-8");
      const { data: frontmatter } = matter(fileContents);
      return {
        id,
        ...frontmatter,
      };
    })
    .filter((post) => post);
  return {
    props: {
      posts: posts.sort(sortByDate),
    },
  };
}
